const o="czx5f7vF3EL4Y1EN0y6I6S8Zcct9jJbQ3D2lsDXR",c="stage",i=`https://api.shotstack.io/edit/${c}`;async function l(r){const t=await fetch(`${i}/render`,{method:"POST",headers:{"Content-Type":"application/json","x-api-key":o},body:JSON.stringify(r)});if(!t.ok){const a=await t.text();throw new Error(`Failed to create render: ${t.statusText} - ${a}`)}return(await t.json()).response.id}async function d(r){const t=await fetch(`${i}/render/${r}`,{headers:{"x-api-key":o}});if(!t.ok)throw new Error(`Failed to get render status: ${t.statusText}`);return(await t.json()).response}async function u(r,t){return new Promise((n,a)=>{const s=setInterval(async()=>{try{const e=await d(r);t&&t(e.status),e.status==="done"?(clearInterval(s),e.url?n(e.url):a(new Error("Render completed but no URL provided"))):e.status==="failed"&&(clearInterval(s),a(new Error(e.error||"Render failed")))}catch(e){clearInterval(s),a(e)}},3e3)})}export{l as createRender,d as getRenderStatus,u as pollRenderStatus};
